import numpy as np    # Large arrays and matrices
import pandas as pd
from sklearn import linear_model
from sklearn.cross_validation import train_test_split  # Check for accuracy

df_x = pd.DataFrame(dataset.data, columns = dataset.feature_names)
df_y = pd.DataFrame(dataset.target)
df_x.describe()

reg = linear_model.LinearRegression()
x_train, x_test, y_train, y_test = train_test_split(df_x, df_y, test_size = 0.2, random_state = 4)    # test_size = 0.2: 20 person for test, remaining is for train ;  
                                                                                                        #  random_state is needed when we want the data to run and validate multiple times
reg.fit(x_train, y_train) # Fit the dataset to the regression function
reg.coef_

a = reg.predict(x_test)
a[3]
y_test

np.mean((a-y_test)**2)  # Mean squared error
